name: Broken Link Check

on:
  schedule:
    - cron: '0 14 * * *'  # 12AM AEST (UTC+10) = 2PM UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: feat/daily-run  # Branch containing the crawler/report code to execute

    steps:
      - name: Checkout repo (feature branch code)
        uses: actions/checkout@v3
        with:
          ref: ${{ env.TARGET_BRANCH }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Retrieve existing DB from gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages
          fetch-depth: 1

      - name: Restore DB if exists
        run: |
          if [ -f gh-pages/broken_links.db ]; then
            cp gh-pages/broken_links.db ./broken_links.db
            echo "Restored existing broken_links.db"
          else
            echo "No existing DB found; starting fresh."
          fi

      - name: Run AU Link Checker
        run: python au_link_checker.py

      - name: Run NZ Link Checker
        run: python nz_link_checker.py

      - name: Send Broken Links to New Relic
        if: always() # Ensures this step runs even if previous steps fail
        env:
          NEW_RELIC_LICENSE_KEY: ${{ secrets.NEW_RELIC_LICENSE_KEY }}
          NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
        run: |
          python report_generator.py --send-to-new-relic

      - name: Generate Combined Report
        run: python report_generator.py --au-csv au_link_check_results.csv --nz-csv nz_link_check_results.csv --output-html combined_report.html

      - name: Rename report for GitHub Pages
        run: mv combined_report.html index.html

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: link-check-report
          path: |
            index.html
            broken_links.db

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: . # Publish the root directory which now contains index.html (the combined report)
          publish_branch: gh-pages
          force_orphan: true # Create a clean history for the gh-pages branch
          # Security Note: GITHUB_TOKEN has permissions to write to the repository. 
          # The peaceiris/actions-gh-pages action is widely used and maintained.
          # Ensure secrets.GITHUB_TOKEN permissions are scoped appropriately if more fine-grained control is needed.
          # For this use case (deploying to gh-pages), default permissions are usually sufficient.
